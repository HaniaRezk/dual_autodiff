Search.setIndex({"docnames": ["index", "material/part1/notebook", "material/part2/notebook", "material/part3/notebook", "material/part4/notebook"], "filenames": ["index.rst", "material/part1/notebook.rst", "material/part2/notebook.rst", "material/part3/notebook.rst", "material/part4/notebook.rst"], "titles": ["Automatic differentiation using dual numbers package", "<span class=\"section-number\">1. </span>Package structure", "<span class=\"section-number\">2. </span>Dual Numbers Class", "<span class=\"section-number\">3. </span>Test suite", "<span class=\"section-number\">4. </span>Differentiating a function"], "terms": {"author": 0, "hania": 0, "rezk": 0, "c1": 0, "reasearch": 0, "comput": [0, 2, 4], "coursework": [0, 1, 4], "michaelma": 0, "term": 0, "2024": 0, "univers": 0, "cambridg": 0, "thi": [0, 1, 2, 3, 4], "project": 0, "aim": [0, 4], "creat": 0, "perform": [0, 2, 3, 4], "To": 0, "instal": 0, "pip": 0, "path": 0, "dual_autodiff": [0, 1, 2], "whl": 0, "structur": [0, 2], "class": [0, 1, 3], "test": [0, 1], "suit": [0, 1], "detail": 0, "function": [0, 2, 3], "wikipedia": 0, "page": [0, 1], "section": [1, 2, 3, 4], "provid": [1, 3, 4], "an": [1, 2, 3], "overview": [1, 3], "our": [1, 2, 3], "clarifi": 1, "name": 1, "hierarchi": 1, "file": 1, "pyproject": 1, "toml": 1, "configur": 1, "readm": 1, "md": 1, "instruct": 1, "folder": 1, "code": [1, 4], "__init__": 1, "py": 1, "version": 1, "manag": 1, "dual": [1, 3, 4], "dist": 1, "distribut": 1, "doc": 1, "document": 1, "makefil": 1, "command": 1, "build": 1, "requir": 1, "txt": 1, "conf": 1, "index": 1, "rst": 1, "The": [1, 2, 4], "main": 1, "materi": 1, "notbeook": 1, "differ": [1, 3, 4], "part": [1, 2, 3], "autodiff_tool": [1, 3], "question5": [1, 4], "question": [1, 4], "5": [1, 4], "cover": 2, "implement": [2, 3], "method": [2, 4], "which": [2, 4], "us": [2, 3, 4], "handl": [2, 3], "automat": [2, 4], "differenti": [2, 3], "real": [2, 3], "base": 2, "object": 2, "A": [2, 3, 4], "defin": [2, 4], "standard": 2, "oper": [2, 3], "them": 2, "__add__": 2, "x": [2, 4], "redefin": [2, 3], "adapt": 2, "paramet": [2, 4], "scalar": [2, 3], "add": [2, 3], "current": 2, "instanc": 2, "return": [2, 3, 4], "result": 2, "addit": 2, "input": [2, 3], "type": 2, "__eq__": 2, "we": [2, 4], "want": [2, 4], "compar": [2, 4], "true": 2, "ar": [2, 3], "equal": [2, 3], "fals": 2, "bool": 2, "__floordiv__": 2, "divid": [2, 3], "floor": 2, "divis": 2, "between": [2, 3], "rais": [2, 3], "warn": [2, 3], "If": 2, "zero": 2, "attempt": 2, "__iadd__": 2, "__ifloordiv__": 2, "__imod__": 2, "modulu": 2, "__imul__": 2, "multipli": [2, 3], "multipl": 2, "__ipow__": 2, "power": [2, 3], "__isub__": 2, "subtract": [2, 3], "from": [2, 3], "__itruediv__": 2, "__mod__": 2, "__mul__": 2, "__ne__": 2, "__neg__": 2, "negat": 2, "__pow__": 2, "__radd__": 2, "revers": [2, 3], "consid": 2, "case": [2, 3], "where": 2, "have": 2, "__rfloordiv__": 2, "numer": [2, 4], "__rmod__": 2, "__rsub__": 2, "__rtruediv__": 2, "__str__": 2, "readabl": 2, "string": 2, "form": 2, "get": 2, "desir": 2, "output": [2, 3], "when": [2, 3], "print": [2, 3], "__sub__": 2, "__truediv__": 2, "ceil": 2, "co": [2, 3, 4], "cosin": 2, "deriv": [2, 4], "evalu": 2, "exp": [2, 3], "exponenti": 2, "invers": [2, 3], "0": 2, "error": 2, "log": [2, 3, 4], "logarithm": 2, "sin": [2, 3, 4], "sine": 2, "reult": 2, "squar": 2, "tan": [2, 3], "tangent": 2, "For": 3, "each": [3, 4], "wa": 3, "make": 3, "sure": 3, "expect": 3, "eg": 3, "two": 3, "were": 3, "1": [3, 4], "first": 3, "number": [3, 4], "2": [3, 4], "second": 3, "can": 3, "also": 3, "illeg": 3, "nan": 3, "test_add": 3, "correctli": 3, "test_add_scalar": 3, "test_co": 3, "behav": 3, "accordingli": 3, "test_div": 3, "anoth": 3, "invalid": 3, "test_div_scalar": 3, "test_eq": 3, "identifi": 3, "test_eq_scalar": 3, "test_exp": 3, "test_g": 3, "accord": 3, "its": 3, "redefinit": 3, "test_gt": 3, "test_iadd": 3, "test_iadd_scalar": 3, "test_idiv": 3, "test_idiv_scalar": 3, "test_imultipli": 3, "test_imultiply_scalar": 3, "test_init": 3, "initi": 3, "test_invers": 3, "test_ipow": 3, "test_ipower_scalar": 3, "test_isubtract": 3, "test_isubtract_scalar": 3, "test_l": 3, "test_log": 3, "test_lt": 3, "test_multipli": 3, "test_multiply_scalar": 3, "test_n": 3, "test_ne_scalar": 3, "test_pow": 3, "test_power_scalar": 3, "test_print": 3, "capsi": 3, "_": 3, "test_radd_scalar": 3, "test_rdiv_scalar": 3, "test_rmul_scalar": 3, "test_rsub_scalar": 3, "test_sin": 3, "test_subtract": 3, "test_subtract_scalar": 3, "test_tan": 3, "correspond": 4, "f": 4, "analyt": 4, "3": 4, "valu": 4, "interest": 4, "f_ad": 4, "f_analyt": 4, "f_numer": 4, "h": 4, "step": 4, "size": 4, "interv": 4, "plot": 4, "1e": 4, "16": 4, "13": 4, "numerical_valu": 4, "time_decor": 4, "func": 4, "decor": 4, "execut": 4, "time": 4, "help": 4}, "objects": {"dual_autodiff": [[2, 0, 0, "-", "dual"]], "dual_autodiff.dual": [[2, 1, 1, "", "Dual"]], "dual_autodiff.dual.Dual": [[2, 2, 1, "", "__add__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__floordiv__"], [2, 2, 1, "", "__iadd__"], [2, 2, 1, "", "__ifloordiv__"], [2, 2, 1, "", "__imod__"], [2, 2, 1, "", "__imul__"], [2, 2, 1, "", "__ipow__"], [2, 2, 1, "", "__isub__"], [2, 2, 1, "", "__itruediv__"], [2, 2, 1, "", "__mod__"], [2, 2, 1, "", "__mul__"], [2, 2, 1, "", "__ne__"], [2, 2, 1, "", "__neg__"], [2, 2, 1, "", "__pow__"], [2, 2, 1, "", "__radd__"], [2, 2, 1, "", "__rfloordiv__"], [2, 2, 1, "", "__rmod__"], [2, 2, 1, "", "__rsub__"], [2, 2, 1, "", "__rtruediv__"], [2, 2, 1, "", "__str__"], [2, 2, 1, "", "__sub__"], [2, 2, 1, "", "__truediv__"], [2, 2, 1, "", "ceil"], [2, 2, 1, "", "cos"], [2, 3, 1, "", "dual"], [2, 2, 1, "", "exp"], [2, 2, 1, "", "floor"], [2, 2, 1, "", "inverse"], [2, 2, 1, "", "log"], [2, 3, 1, "", "real"], [2, 2, 1, "", "sin"], [2, 2, 1, "", "square"], [2, 2, 1, "", "tan"]], "": [[4, 0, 0, "-", "question5"]], "question5": [[4, 4, 1, "", "f"], [4, 4, 1, "", "f_AD"], [4, 4, 1, "", "f_analytical"], [4, 4, 1, "", "f_numerically"], [4, 4, 1, "", "interval"], [4, 4, 1, "", "numerical_values"], [4, 4, 1, "", "time_decorator"]], "tests": [[3, 0, 0, "-", "autodiff_tools"]], "tests.autodiff_tools": [[3, 4, 1, "", "test_add"], [3, 4, 1, "", "test_add_scalar"], [3, 4, 1, "", "test_cos"], [3, 4, 1, "", "test_div"], [3, 4, 1, "", "test_div_scalar"], [3, 4, 1, "", "test_eq"], [3, 4, 1, "", "test_eq_scalar"], [3, 4, 1, "", "test_exp"], [3, 4, 1, "", "test_ge"], [3, 4, 1, "", "test_gt"], [3, 4, 1, "", "test_iadd"], [3, 4, 1, "", "test_iadd_scalar"], [3, 4, 1, "", "test_idiv"], [3, 4, 1, "", "test_idiv_scalar"], [3, 4, 1, "", "test_imultiply"], [3, 4, 1, "", "test_imultiply_scalar"], [3, 4, 1, "", "test_init"], [3, 4, 1, "", "test_inverse"], [3, 4, 1, "", "test_ipower"], [3, 4, 1, "", "test_ipower_scalar"], [3, 4, 1, "", "test_isubtract"], [3, 4, 1, "", "test_isubtract_scalar"], [3, 4, 1, "", "test_le"], [3, 4, 1, "", "test_log"], [3, 4, 1, "", "test_lt"], [3, 4, 1, "", "test_multiply"], [3, 4, 1, "", "test_multiply_scalar"], [3, 4, 1, "", "test_ne"], [3, 4, 1, "", "test_ne_scalar"], [3, 4, 1, "", "test_power"], [3, 4, 1, "", "test_power_scalar"], [3, 4, 1, "", "test_print"], [3, 4, 1, "", "test_radd_scalar"], [3, 4, 1, "", "test_rdiv_scalar"], [3, 4, 1, "", "test_rmul_scalar"], [3, 4, 1, "", "test_rsub_scalar"], [3, 4, 1, "", "test_sin"], [3, 4, 1, "", "test_subtract"], [3, 4, 1, "", "test_subtract_scalar"], [3, 4, 1, "", "test_tan"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"automat": 0, "differenti": [0, 4], "us": 0, "dual": [0, 2], "number": [0, 2], "packag": [0, 1], "goal": [0, 4], "get": 0, "start": 0, "section": 0, "resourc": 0, "structur": 1, "class": 2, "test": 3, "suit": 3, "detail": [3, 4], "function": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 3, "sphinx": 56}})